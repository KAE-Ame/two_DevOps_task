kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv
spec:
  capacity:
    storage: {{ .Values.storage_capacity }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim
spec:
  storageClassName: "local-storage"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage_capacity }}

---

apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Release.Name }}-deploy
  labels:
    app: {{ .Release.Name }}-back

spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-back
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-back
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: {{ .Values.port }}
              name: http
              protocol: "TCP"
          volumeMounts:
            - mountPath: "/home/worker/uploads"
              name: pvc
      volumes:
        - name: pvc
          persistentVolumeClaim:
            claimName: pv-claim